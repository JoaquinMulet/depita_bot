# main.py (versi√≥n actualizada para incluir el monitor)
import sys
import os
from dotenv import load_dotenv

# Importa las funciones principales de tus otros scripts
# ASUMO que tus scripts tienen una funci√≥n main() como el analyzer
from scraper import main as run_scraper
from analyzer import main as run_analyzer
# --- NUEVA L√çNEA: Importamos la funci√≥n principal del monitor ---
from monitor import main as run_monitor

# Cargar variables de entorno desde .env para desarrollo local
load_dotenv()

def run_full_process():
    """
    Ejecuta el proceso completo: scraping, an√°lisis y monitoreo.
    """
    print("==============================================")
    print("üöÄ INICIANDO PROCESO COMPLETO DE PROPIEDADES")
    print("==============================================")

    # --- PASO 1: SCRAPER (Sin cambios) ---
    try:
        print("\n--- PASO 1: EJECUTANDO SCRAPER ---")
        run_scraper()
        print("--- ‚úÖ SCRAPER FINALIZADO CON √âXITO ---\n")
    except Exception as e:
        print(f"--- ‚ùå ERROR CR√çTICO EN SCRAPER ---")
        print(f"Error: {e}")
        print("El proceso se detendr√°. El analizador y monitor no se ejecutar√°n.")
        sys.exit(1)

    # --- PASO 2: ANALIZADOR (Sin cambios) ---
    try:
        print("\n--- PASO 2: EJECUTANDO ANALIZADOR ---")
        run_analyzer()
        print("--- ‚úÖ ANALIZADOR FINALIZADO CON √âXITO ---\n")
    except Exception as e:
        print(f"--- ‚ùå ERROR CR√çTICO EN ANALIZADOR ---")
        print(f"Error: {e}")
        print("El proceso se detendr√°. El monitor no se ejecutar√°.")
        sys.exit(1)

    # --- NUEVO PASO 3: MONITOR ---
    try:
        print("\n--- PASO 3: EJECUTANDO MONITOR ---")
        run_monitor()
        print("--- ‚úÖ MONITOR FINALIZADO CON √âXITO ---\n")
    except Exception as e:
        # Un error en el monitor no deber√≠a detener el proceso como cr√≠tico,
        # pero s√≠ deber√≠a registrarse.
        print(f"--- ‚ö†Ô∏è ADVERTENCIA EN MONITOR ---")
        print(f"Error: {e}")
        # No usamos sys.exit(1) para que el log de Railway no marque el run como fallido
        # si solo falla el monitoreo opcional.

    print("==============================================")
    print("üéâ PROCESO COMPLETO FINALIZADO EXITOSAMENTE")
    print("==============================================")


if __name__ == "__main__":
    run_full_process()